{"version":3,"file":"static/js/219.7555d52d.chunk.js","mappings":"0SAEaA,EAAOC,EAAAA,GAAAA,GAAH,2OAWJC,EAAQD,EAAAA,GAAAA,IAAH,mJAQLE,EAAYF,EAAAA,GAAAA,EAAH,6C,SC4BtB,EAtCa,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEsBC,EAAAA,EAAAA,GAAUH,GAFhC,OAESI,EAFT,OAGGL,EAAUK,GAHb,gDAKEC,EAAAA,GAAAA,MAAY,gDAAiD,CAC3DC,SAAUD,EAAAA,GAAAA,SAAAA,aANd,wDAAD,EAUD,GAAE,CAACL,KAGF,2BACGF,GAAYA,EAAOS,QAClB,SAACd,EAAD,UACGK,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OACV,2BACE,SAAChB,EAAD,CACEiB,IAAKF,EA1BF,kCA0B8BA,EA3B/C,+EA4BcG,IAAKF,KAEP,SAACf,EAAD,UAAYe,MALLF,EADC,OAWd,kFAEF,SAAC,KAAD,CAAgBK,UAAW,SAGhC,C,kMC3CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGVC,EAAmB,mCAAG,oGACHF,EAAAA,EAAAA,IAAA,qCAAwCC,IADrC,cACpBE,EADoB,yBAInBA,EAASd,KAAKe,SAJK,2CAAH,qDASnBC,EAAiB,mCAAG,WAAMpB,GAAN,uFACDe,EAAAA,EAAAA,IAAA,gBACZf,EADY,oBACOgB,EADP,oBADC,cAClBE,EADkB,yBAKjBA,EAASd,MALQ,2CAAH,sDASjBD,EAAS,mCAAG,WAAMH,GAAN,uFACOe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,oBADP,cACVE,EADU,yBAMTA,EAASd,KAAKiB,MANL,2CAAH,sDAUTC,EAAY,mCAAG,WAAMtB,GAAN,uFACIe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,2BADJ,cACbE,EADa,yBAMZA,EAASd,KAAKe,SANF,2CAAH,sDAUZI,EAAgB,mCAAG,WAAMC,GAAN,uFACAT,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCQ,EADnC,gCADA,cACjBN,EADiB,yBAKhBA,EAASd,KAAKe,SALE,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 10px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 200px;\n  height: 200px;\n  object-fit: contain;\n`;\nexport const ActorName = styled.p`\ntext-align: center;\n`\n","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../fetchMovies';\nimport { List, Image, ActorName } from './Cast.styled';\n\nconst placeHolder =\n  'https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png';\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await fetchCast(movieId);\n        setActors(data);\n      } catch (error){\n       toast.error('Sorry, something is wrong with cast request! ', {\n         position: toast.POSITION.TOP_CENTER,\n       });\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <div>\n      {actors && !!actors.length ? (\n        <List>\n          {actors.map(({ id, profile_path, name }) => (\n            <li key={id}>\n              <Image\n                src={profile_path ? baseImgUrl + profile_path : placeHolder}\n                alt={name}\n              />\n              <ActorName>{name}</ActorName>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <div>There is no information about the cast of the movie</div>\n      )}\n      <ToastContainer autoClose={1500} />\n    </div>\n  );\n};\nexport default Cast;\n","// import PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = '39cac865cd97b5021efa5cb45c64bc17';\n\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${api_key}`)\n  // console.log(response.data.results);\n\n  return response.data.results;\n\n};\n\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n  // console.log(response);\n  return response.data;\n};\n\n\nconst fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n  // console.log(response.data.cast);\n\n  return response.data.cast;\n};\n\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${api_key}&language=en-US&page=1`\n  );\n\n\n  return response.data.results;\n};\n\n\nconst fetchSearchMovie = async movie => {\n  const response = await axios.get(\n    `search/movie?api_key=${api_key}&language=en-US&query=${movie}&page=1&include_adult=false`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\n\n\n export {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearchMovie,\n  fetchCast,\n  fetchReviews,\n};\n\n"],"names":["List","styled","Image","ActorName","useState","actors","setActors","movieId","useParams","useEffect","fetchCast","data","toast","position","length","map","id","profile_path","name","src","alt","autoClose","axios","api_key","fetchTrendingMovies","response","results","fetchMovieDetails","cast","fetchReviews","fetchSearchMovie","movie"],"sourceRoot":""}