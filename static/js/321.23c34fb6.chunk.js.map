{"version":3,"file":"static/js/321.23c34fb6.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","fetchMovies.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 30px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n  list-style: none;\n\n`;\n\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n    -webkit-box-shadow: 5px 5px 15px 5px #ff8080, -9px 5px 15px 5px #ffe488,\n      -7px -5px 15px 5px #8cff85, 12px -5px 15px 5px #80c7ff,\n      12px 10px 15px 7px #e488ff, -10px 10px 15px 7px #ff616b,\n      -10px -7px 27px 1px #8e5cff, 5px 5px 15px 5px rgba(0, 0, 0, 0);\n    box-shadow: 5px 5px 15px 5px #ff8080, -9px 5px 15px 5px #ffe488,\n      -7px -5px 15px 5px #8cff85, 12px -5px 15px 5px #80c7ff,\n      12px 10px 15px 7px #e488ff, -10px 10px 15px 7px #ff616b,\n      -10px -7px 27px 1px #8e5cff, 5px 5px 15px 5px rgba(0, 0, 0, 0);\n\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 500px;\n  object-fit: cover;\n\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  text-shadow: 4px 4px 6px rgba(0, 0, 0, 0.6);\n`;\n","\nimport PropTypes from 'prop-types';\nimport { Item, List, Image, Title, Link } from './MovieList.styled';\n\nconst { useLocation } = require('react-router-dom');\n\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\nconst placeHolder =\n  'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <List>\n        {movies.map(({ id, title, poster_path, name }) => (\n          <Item key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Image\n                src={poster_path ? baseImgUrl + poster_path : placeHolder}\n                alt={name}\n                width=\"250\"\n              />\n              <Title>{title}</Title>\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","// import PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = '39cac865cd97b5021efa5cb45c64bc17';\n\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${api_key}`)\n  // console.log(response.data.results);\n\n  return response.data.results;\n\n};\n\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n  // console.log(response);\n  return response.data;\n};\n\n\nconst fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n  // console.log(response.data.cast);\n\n  return response.data.cast;\n};\n\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${api_key}&language=en-US&page=1`\n  );\n\n\n  return response.data.results;\n};\n\n\nconst fetchSearchMovie = async movie => {\n  const response = await axios.get(\n    `search/movie?api_key=${api_key}&language=en-US&query=${movie}&page=1&include_adult=false`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\n\n\n export {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearchMovie,\n  fetchCast,\n  fetchReviews,\n};\n\n","import styled from 'styled-components';\n\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n`;\n\n\nexport const Input = styled.input`\n  padding: 13px 20px;\n  width: 700px;\n  border-radius: 4px;\n  font-size: 18px;\n  border: 1px solid orangered;\n\n  :focus {\n    box-shadow: 0px 0px 0px 1px white;\n  }\n`;\nexport const SearchFormButton = styled.button`\n  padding: 8px 14px;\n  font-weight: 400;\n  font-size: 18px;\n  border-radius: 4px;\n  border: 1px solid white;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  background-color: orangered;\n  transition: all 200ms ease-in-out;\n  cursor: pointer;\n  :hover,\n  :focus {\n    color: orangered;\n    background-color: white;\n    border: 1px solid orangered;\n  }\n`;\n\n\n","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from 'fetchMovies';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Input, SearchFormButton, Form } from './Movies.styled';\n\nconst Movies = () => {\n  const [value, setValue] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return toast.warn('The search string cannot be empty!', {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    }\n\n    setSearchParams(query !== '' ? { query } : {});\n    setQuery('');\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n\n    if (!query) {\n      return;\n    }\n\n    (async () => {\n      try {\n        const data = await fetchSearchMovie(query);\n\n          if (data.length === 0) {\n            return toast.error(`No results found for ${query}`, {\n              position: toast.POSITION.TOP_CENTER,\n            });\n          }\n\n        setValue(data);\n      } catch (error){\n       toast.error(error.message);\n      }\n    })();\n  }, [searchParams, value.length]);\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"\"\n          value={query}\n          onChange={handleChange}\n        />\n        <SearchFormButton type=\"submit\">Search</SearchFormButton>\n      </Form>\n      <MovieList movies={value} />\n      <ToastContainer autoClose={1500} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","Item","Image","Title","Link","NavLink","useLocation","require","movies","location","map","id","title","poster_path","name","to","state","from","src","alt","width","axios","api_key","fetchTrendingMovies","response","data","results","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","fetchSearchMovie","movie","Form","Input","SearchFormButton","useState","value","setValue","query","setQuery","useSearchParams","searchParams","setSearchParams","useEffect","get","length","toast","position","message","onSubmit","e","preventDefault","trim","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","MovieList","autoClose"],"sourceRoot":""}