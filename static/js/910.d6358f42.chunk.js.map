{"version":3,"file":"static/js/910.d6358f42.chunk.js","mappings":"yNA+CA,UAxCa,WAEX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAbAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEsBC,EAAAA,EAAAA,GAAUH,GAFhC,OAESI,EAFT,OAIGL,EAAUK,GAJb,gDAMGC,QAAQC,IAAIC,OANf,wDAAD,EASD,GAAE,CAACP,KAIF,yBACGF,GAAYA,EAAOU,QAClB,wBACGV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OACV,2BACE,gBACEC,IAAKF,EA5BF,kCA4B8BA,EA7B9B,+EA8BHG,IAAKF,EAAMG,MAAM,SAEnB,uBAAIH,MALGF,EADC,OAWd,kFAKP,C,8LCzCDM,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGVC,EAAmB,mCAAG,oGACHF,EAAAA,EAAAA,IAAA,qCAAwCC,IADrC,cACpBE,EADoB,yBAInBA,EAASf,KAAKgB,SAJK,2CAAH,qDASnBC,EAAiB,mCAAG,WAAMrB,GAAN,uFACDgB,EAAAA,EAAAA,IAAA,gBACZhB,EADY,oBACOiB,EADP,oBADC,cAClBE,EADkB,yBAKjBA,EAASf,MALQ,2CAAH,sDASjBD,EAAS,mCAAG,WAAMH,GAAN,uFACOgB,EAAAA,EAAAA,IAAA,gBACZhB,EADY,4BACeiB,EADf,oBADP,cACVE,EADU,yBAMTA,EAASf,KAAKkB,MANL,2CAAH,sDAUTC,EAAY,mCAAG,WAAMvB,GAAN,uFACIgB,EAAAA,EAAAA,IAAA,gBACZhB,EADY,4BACeiB,EADf,2BADJ,cACbE,EADa,yBAMZA,EAASf,KAAKgB,SANF,2CAAH,sDAUZI,EAAgB,mCAAG,WAAMC,GAAN,uFACAT,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCQ,EADnC,gCADA,cACjBN,EADiB,yBAKhBA,EAASf,KAAKgB,SALE,2CAAH,qD","sources":["components/Cast.js","fetchMovies.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../fetchMovies'\n\nconst placeHolder ='https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png';\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await fetchCast(movieId);\n\n        setActors(data);\n      } catch {\n        console.log(Error);\n      }\n    })();\n  }, [movieId]);\n\n\n  return (\n    <div>\n      {actors && !!actors.length ? (\n        <ul>\n          {actors.map(({ id, profile_path, name }) => (\n            <li key={id}>\n              <img\n                src={profile_path ? baseImgUrl + profile_path : placeHolder}\n                alt={name} width='200'\n              />\n              <p>{name}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>There is no information about the cast of the movie</div>\n      )}\n\n    </div>\n  );\n};\nexport default Cast;\n","// import PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = '39cac865cd97b5021efa5cb45c64bc17';\n\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${api_key}`)\n  // console.log(response.data.results);\n\n  return response.data.results;\n\n};\n\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n  // console.log(response);\n  return response.data;\n};\n\n\nconst fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n  // console.log(response.data.cast);\n\n  return response.data.cast;\n};\n\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${api_key}&language=en-US&page=1`\n  );\n\n\n  return response.data.results;\n};\n\n\nconst fetchSearchMovie = async movie => {\n  const response = await axios.get(\n    `search/movie?api_key=${api_key}&language=en-US&query=${movie}&page=1&include_adult=false`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\n\n\n export {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearchMovie,\n  fetchCast,\n  fetchReviews,\n};\n\n"],"names":["useState","actors","setActors","movieId","useParams","useEffect","fetchCast","data","console","log","Error","length","map","id","profile_path","name","src","alt","width","axios","api_key","fetchTrendingMovies","response","results","fetchMovieDetails","cast","fetchReviews","fetchSearchMovie","movie"],"sourceRoot":""}