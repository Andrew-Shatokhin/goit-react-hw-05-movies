{"version":3,"file":"static/js/847.f76d37ea.chunk.js","mappings":"8SAKAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGVC,EAAmB,mCAAG,oGACHF,EAAAA,EAAAA,IAAA,qCAAwCC,IADrC,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qDASnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACDP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACON,EADP,oBADC,cAClBE,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDASjBI,EAAS,mCAAG,WAAMD,GAAN,uFACOP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,oBADP,cACVE,EADU,yBAMTA,EAASC,KAAKK,MANL,2CAAH,sDAUTC,EAAY,mCAAG,WAAMH,GAAN,uFACIP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,2BADJ,cACbE,EADa,yBAMZA,EAASC,KAAKC,SANF,2CAAH,sDAUZM,EAAgB,mCAAG,WAAMC,GAAN,uFACAZ,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCW,EADnC,gCADA,cACjBT,EADiB,yBAKhBA,EAASC,KAAKC,SALE,2CAAH,qD,iHC6BtB,UArEqB,WAAO,IAAD,QACzB,GAA0BQ,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOD,EAAP,KAAcE,EAAd,KAEQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACRS,QAAQC,IAAIV,GAEX,IAAMW,GAAWC,EAAAA,EAAAA,MAEZC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAe3D,OAbEC,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEsBlB,EAAAA,EAAAA,IAAkBC,GAFxC,OAESH,EAFT,OAIGU,EAASV,GAJZ,gDAMGY,QAAQC,IAAIQ,OANf,wDAAD,EASD,GAAE,CAAClB,KAIJ,4BACE,SAAC,EAAAmB,KAAD,CAAMC,GAAIP,EAAoBQ,QAA9B,UACE,mBAAQC,KAAK,SAAb,wBAGF,gBAAKC,IAAG,yCAAoClB,EAAMmB,aAAeC,IAAI,MACrE,0BACGpB,EAAMqB,MADT,KACgB,0CAAQrB,EAAMsB,oBAAd,aAAQ,EAAoBC,MAAM,EAAG,GAArC,WAEhB,wCAAgBC,KAAKC,MAA2B,GAArBzB,EAAM0B,cAAjC,QACA,sCACA,uBAAI1B,EAAM2B,YACV,qCACA,iCAAI3B,EAAM4B,cAAV,aAAI,EAAcC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SAehD,2BACE,mDACA,yBACE,SAAC,EAAAlB,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,2BAIJ,SAAC,EAAAkB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["fetchMovies.js","pages/MovieDetails.js"],"sourcesContent":["// import PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = '39cac865cd97b5021efa5cb45c64bc17';\n\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${api_key}`)\n  // console.log(response.data.results);\n\n  return response.data.results;\n\n};\n\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n  // console.log(response);\n  return response.data;\n};\n\n\nconst fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n  // console.log(response.data.cast);\n\n  return response.data.cast;\n};\n\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${api_key}&language=en-US&page=1`\n  );\n\n\n  return response.data.results;\n};\n\n\nconst fetchSearchMovie = async movie => {\n  const response = await axios.get(\n    `search/movie?api_key=${api_key}&language=en-US&query=${movie}&page=1&include_adult=false`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\n\n\n export {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearchMovie,\n  fetchCast,\n  fetchReviews,\n};\n\n","import { useEffect, useRef, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../fetchMovies';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\n\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n\n  const { movieId } = useParams();\n  console.log(movieId);\n\n   const location = useLocation();\n  //  const backLinkHref = location.state?.from ?? '/';\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n    useEffect(() => {\n      (async () => {\n        try {\n          const data = await fetchMovieDetails(movieId);\n\n          setMovie(data);\n        } catch (error) {\n          console.log(Error);\n        }\n      })();\n    }, [movieId]);\n\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>\n        <button type=\"button\">Go back</button>\n      </Link>\n\n      <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} alt=\"\" />\n      <h2>\n        {movie.title} <span>({movie.release_date?.slice(0, 4)})</span>\n      </h2>\n      <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n      <h3>Overview</h3>\n      <p>{movie.overview}</p>\n      <h4>Gengers</h4>\n      <p>{movie.genres?.map(genre => genre.name).join(', ')}</p>\n      {/* <img\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n            : `http://www.suryalaya.org/images/no_image.jpg`\n        }\n        alt=\"\"\n      />\n      <h2>Title:{movie.title}</h2>\n      <p>User score:{movie.popularity} %</p>\n      <h3>Overview</h3>\n      <p>{movie.overview}</p>\n      <h3>Genres</h3>\n      <p>{movie.genres}</p> */}\n      <ul>\n        <p>Additional information</p>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","fetchTrendingMovies","response","data","results","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","fetchSearchMovie","movie","useState","setMovie","useParams","console","log","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","Error","Link","to","current","type","src","poster_path","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}