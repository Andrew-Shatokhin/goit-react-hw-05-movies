{"version":3,"file":"static/js/847.eb7ddf72.chunk.js","mappings":"8SAKAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGVC,EAAmB,mCAAG,oGACHF,EAAAA,EAAAA,IAAA,qCAAwCC,IADrC,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qDASnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACDP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACON,EADP,oBADC,cAClBE,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDASjBI,EAAS,mCAAG,WAAMD,GAAN,uFACOP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,oBADP,cACVE,EADU,yBAMTA,EAASC,KAAKK,MANL,2CAAH,sDAUTC,EAAY,mCAAG,WAAMH,GAAN,uFACIP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,2BADJ,cACbE,EADa,yBAMZA,EAASC,KAAKC,SANF,2CAAH,sDAUZM,EAAgB,mCAAG,WAAMC,GAAN,uFACAZ,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCW,EADnC,gCADA,cACjBT,EADiB,yBAKhBA,EAASC,KAAKC,SALE,2CAAH,qD,iHCwBtB,UA9DqB,WAAO,IAAD,IACzB,GAA0BQ,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOD,EAAP,KAAcE,EAAd,KAEQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAGFS,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAEzDC,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEsBhB,EAAAA,EAAAA,IAAkBC,GAFxC,OAESH,EAFT,OAIGU,EAASV,GAJZ,gDAMGmB,QAAQC,IAAIC,OANf,wDAAD,EASD,GAAE,CAAClB,IAIN,IAAQmB,EAAqEd,EAArEc,YAAaC,EAAwDf,EAAxDe,MAAOC,EAAiDhB,EAAjDgB,aAAcC,EAAmCjB,EAAnCiB,aAAcC,EAAqBlB,EAArBkB,SAAUC,EAAWnB,EAAXmB,OAElE,OACE,4BACE,SAAC,EAAAC,KAAD,CAAMC,GAAIf,EAAoBgB,QAA9B,UACE,mBAAQC,KAAK,SAAb,wBAEF,gBACEC,IAAKV,EAlCQ,kCAkCmBA,EAjCnB,+EAkCbW,IAAKV,KAEP,0BACGA,EADH,KACU,uCAAQC,QAAR,IAAQA,OAAR,EAAQA,EAAcU,MAAM,EAAG,GAA/B,WAEV,wCAAgBC,KAAKC,MAAqB,GAAfX,GAA3B,QACA,sCACA,uBAAIC,GAAY,gCAChB,qCACA,wBACS,OAANC,QAAM,IAANA,OAAA,EAAAA,EAAQU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QAAS,8BAGlD,2BACE,mDACA,yBACE,SAAC,EAAAZ,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,2BAIJ,SAAC,EAAAY,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["fetchMovies.js","pages/MovieDetails.js"],"sourcesContent":["// import PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = '39cac865cd97b5021efa5cb45c64bc17';\n\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${api_key}`)\n  // console.log(response.data.results);\n\n  return response.data.results;\n\n};\n\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n  // console.log(response);\n  return response.data;\n};\n\n\nconst fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n  // console.log(response.data.cast);\n\n  return response.data.cast;\n};\n\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${api_key}&language=en-US&page=1`\n  );\n\n\n  return response.data.results;\n};\n\n\nconst fetchSearchMovie = async movie => {\n  const response = await axios.get(\n    `search/movie?api_key=${api_key}&language=en-US&query=${movie}&page=1&include_adult=false`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n};\n\n\n\n export {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearchMovie,\n  fetchCast,\n  fetchReviews,\n};\n\n","import { useEffect, useRef, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../fetchMovies';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w300';\n  const placeHolder ='https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n\n  const { movieId } = useParams();\n  // console.log(movieId);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n    useEffect(() => {\n      (async () => {\n        try {\n          const data = await fetchMovieDetails(movieId);\n\n          setMovie(data);\n        } catch (error) {\n          console.log(Error);\n        }\n      })();\n    }, [movieId]);\n\n\n\n  const { poster_path, title, release_date, vote_average, overview, genres } = movie;\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>\n        <button type=\"button\">Go back</button>\n      </Link>\n      <img\n        src={poster_path ? baseImgUrl + poster_path : placeHolder}\n        alt={title}\n      />\n      <h2>\n        {title} <span>({release_date?.slice(0, 4)})</span>\n      </h2>\n      <p>User score: {Math.round(vote_average * 10)}%</p>\n      <h3>Overview</h3>\n      <p>{overview || 'Sorry, overview not found!'}</p>\n      <h4>Gengers</h4>\n      <p>\n        {genres?.map(genre => genre.name).join(', ') || 'Sorry, genres not found!'}\n      </p>\n\n      <ul>\n        <p>Additional information</p>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      \n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","fetchTrendingMovies","response","data","results","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","fetchSearchMovie","movie","useState","setMovie","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","console","log","Error","poster_path","title","release_date","vote_average","overview","genres","Link","to","current","type","src","alt","slice","Math","round","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}